plugins {
    id 'java'
    id 'eclipse'
    id 'application'
    id 'net.researchgate.release' version '2.6.0'
    id 'maven-publish'
    id 'maven'
    id 'signing'
    id 'com.jfrog.bintray' version '1.8.5'
}

compileJava.options.encoding = 'UTF-8'

group = 'com.spring.loader'
archivesBaseName = 's3-loader'

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

release {
    failOnCommitNeeded = false
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
}

afterReleaseBuild.dependsOn publish

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['archives']
    pkg {
        repo = 'spring-properties-loader'
        name = 'spring-s3-properties-loader'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/ericdallo/spring-s3-properties-loader.git'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation "org.springframework:spring-context:5.3.0"
    implementation "org.springframework.cloud:spring-cloud-aws-core:2.2.4.RELEASE"
    implementation "org.springframework.cloud:spring-cloud-context:2.2.5.RELEASE"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    testImplementation "org.assertj:assertj-core:3.18.0"
    testImplementation "org.mockito:mockito-inline:3.6.0"
    testImplementation "org.mockito:mockito-junit-jupiter:3.6.0"
    testRuntimeOnly "org.yaml:snakeyaml:1.27"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

artifacts {
    archives jar
    archives sourcesJar
}

// Make all tests use JUnit 5
tasks.withType(Test) {
    useJUnitPlatform()
}

mainClassName = ''
